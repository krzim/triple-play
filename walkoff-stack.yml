version: '3.5'
services:
  umpire:
    image: localhost:5000/umpire:latest
    build:
      context: ./
      dockerfile: umpire/Dockerfile
    networks:
      - walkoff_default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./apps:/app/apps
    environment:
      # Worker options
      - WORKER_TIMEOUT=30
      - API_GATEWAY_URI=http://api_gateway:8080

      # Umpire options
      - APPS_PATH=./apps
      - APP_REFRESH=60
      - SWARM_NETWORK=walkoff_default
      - APP_PREFIX=walkoff_app
      - STACK_PREFIX=walkoff
      - DOCKER_REGISTRY=localhost:5000

      # Redis options
      - REDIS_URI=redis://redis:6379
      - REDIS_ACTION_RESULTS=action-results
      - REDIS_ACTIONS_IN_PROCESS=actions-in-process
      - REDIS_WORKFLOW_QUEUE=workflow-queue
      - REDIS_WORKFLOWS_IN_PROCESS=workflows-in-process

      # Overrides the environment variables for docker-compose and docker commands on the docker machine at 'DOCKER_HOST'
      # See: https://docs.docker.com/compose/reference/envvars/ for more information.
      - DOCKER_HOST=unix:///var/run/docker.sock
      # - DOCKER_HOST=tcp://ip_of_docker_swarm_manager:2376
      # - DOCKER_TLS_VERIFY=1
      # - DOCKER_CERT_PATH=/Path/to/certs/for/remote/docker/daemon
    deploy:
      placement:
        constraints: [node.role==manager]
    depends_on:
      - redis

  registry:
    restart: always
    image: registry:2
    deploy:
      placement:
       constraints: [node.role==manager]
    ports:
      - 5000:5000
    networks:
      - walkoff_default
# The commented lines are needed to enable auth on the custom registry
#    environment:
#      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
#      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
#      REGISTRY_AUTH: htpasswd
#      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
#      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    volumes:
#      - ./data/config.yml:/etc/docker/registry/config.yml
      - /var/lib/boot2docker/registry:/var/lib/registry
#      - /var/lib/boot2docker:/certs
#      - /var/lib/boot2docker/auth:/auth

  api_gateway:
    ports:
    - "8080:8080"
    image: "localhost:5000/api_gateway:latest"
    build:
      context: ./
      dockerfile: ./api_gateway/Dockerfile
    networks:
      - walkoff_default
    environment:
    - "REDIS_OPTIONS={\"host\": \"redis\", \"port\": 6379}"
    - "IP=0.0.0.0"
    - "PORT=8080"
    - "WALKOFF_DB_TYPE=postgresql"
    - "EXECUTION_DB_TYPE=postgresql"
    - "DB_PATH=walkoff"
    - "EXECUTION_DB_PATH=execution"
    - "WALKOFF_DB_HOST=postgres"
    - "EXECUTION_DB_HOST=postgres"
    - "EXECUTION_DB_USERNAME=walkoff"
    - "EXECUTION_DB_PASSWORD=walkoff"
    - "WALKOFF_DB_USERNAME=walkoff"
    - "WALKOFF_DB_PASSWORD=walkoff"
    stop_signal: SIGINT
    stop_grace_period: 30s

  redis:
    container_name: redis
    image: "redis"
    ports:
      - 6379:6379
    networks:
      - walkoff_default
    volumes:
      - /var/lib/boot2docker/redis:/data

  postgres:
    container_name: postgres
    image: "postgres"
    environment:
    - "POSTGRES_USER=walkoff"
    - "POSTGRES_PASSWORD=walkoff"
    ports:
      - 5432:5432
    deploy:
      placement:
        constraints: [node.role==manager]
    networks:
      - walkoff_default
    volumes:
      - /var/lib/boot2docker/postgresql/data:/var/lib/postgresql/data

networks:
  walkoff_default:
    driver: overlay
    name: walkoff_default
